---
title: Line and dot series
categories:
  - Line Chart
---

<h5>{{title}}</h5>
<p>
  The line series chart is used to compare a series of data elements grouped
  along the xAxis.
</p>
<p>
  This example also demonstrates how you can mix in a dot series feature to allow
  specific points along the line series to be clearly demarcated.
</p>
<hr/>
<script type="text/javascript" charset="utf-8">
'use strict';

$(document).ready(function(){
  var data = [
    { year: '2010', unitsSold:-100, salesman : 'Bob' },
    { year: '2011', unitsSold:200, salesman : 'Bob' },
    { year: '2012', unitsSold:300, salesman : 'Bob' },
    { year: '2013', unitsSold:400, salesman : 'Bob' },
    { year: '2014', unitsSold:500, salesman : 'Bob' },
    { year: '2010', unitsSold:100, salesman : 'Gina' },
    { year: '2011', unitsSold:100, salesman : 'Gina' },
    { year: '2012', unitsSold:-100, salesman : 'Gina' },
    { year: '2013', unitsSold:500, salesman : 'Gina' },
    { year: '2014', unitsSold:600, salesman : 'Gina' },
    { year: '2010', unitsSold:400, salesman : 'Average' },
    { year: '2011', unitsSold:0, salesman : 'Average' },
    { year: '2012', unitsSold:400, salesman : 'Average' },
    { year: '2013', unitsSold:400, salesman : 'Average' },
    { year: '2014', unitsSold:400, salesman : 'Average' }
  ];
  var parsedData = d4.parsers.nestedGroup()
    .x(function(){
      return 'year';
    })
    .nestKey(function(){
      return 'salesman';
    })
    .y(function(){
      return 'unitsSold';
    })
    .value(function(){
      return 'unitsSold';
    })(data);

  var chart = d4.lineChart()
  .width($('#example').width())
  .xKey('year')
  .yKey('unitsSold');
  chart.mixin({'dotSeries' : d4.features.dotSeries});

  d3.select('#example')
  .datum(parsedData.data)
  .call(chart);
});

</script>
<div id="example"></div>
<h6>JavaScript Code</h6>
<pre><code id="code" class="language-javascript">
  var data = [
    { year: '2010', unitsSold:-100, salesman : 'Bob' },
    { year: '2011', unitsSold:200, salesman : 'Bob' },
    { year: '2012', unitsSold:300, salesman : 'Bob' },
    { year: '2013', unitsSold:400, salesman : 'Bob' },
    { year: '2014', unitsSold:500, salesman : 'Bob' },
    { year: '2010', unitsSold:100, salesman : 'Gina' },
    { year: '2011', unitsSold:100, salesman : 'Gina' },
    { year: '2012', unitsSold:-100, salesman : 'Gina' },
    { year: '2013', unitsSold:500, salesman : 'Gina' },
    { year: '2014', unitsSold:600, salesman : 'Gina' },
    { year: '2010', unitsSold:400, salesman : 'Average' },
    { year: '2011', unitsSold:0, salesman : 'Average' },
    { year: '2012', unitsSold:400, salesman : 'Average' },
    { year: '2013', unitsSold:400, salesman : 'Average' },
    { year: '2014', unitsSold:400, salesman : 'Average' }
  ];
  var parsedData = d4.parsers.nestedGroup()
    .x(function(){
      return 'year';
    })
    .nestKey(function(){
      return 'salesman'
    })
    .y(function(){
      return 'unitsSold';
    })
    .value(function(){
      return 'unitsSold';
    })(data);

  var chart = d4.lineChart()
  .width($('#example').width())
  .xKey('year')
  .yKey('unitsSold');

  d3.select('#example')
  .datum(parsedData.data)
  .call(chart);
</code></pre>

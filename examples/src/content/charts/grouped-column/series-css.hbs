---
title: Series and Items CSS
concepts:
  - Graphic Design
---

<h5>{{title}}</h5>
<p>
  d4 provides several ways to style a chart through css classes which are added during render time.
  This example gives two examples of how you can style the same chart but produce vastly different visuals.
</p>
<p>
  The first example uses the incrementing <code class="language-css">.item</code> class. As items are
  added to the chart a new item class will be created e.g. <code class="language-css">.item0, .item1, .item2</code>.
</p>
<p>
  The second example uses the incrementing <code class="language-css">.series</code> class. As items are
  added to the chart a new item class will be created e.g. <code class="language-css">.series0, .series1, .series2</code>.
</p>
<hr/>
<script type="text/javascript" charset="utf-8" id='source_code'>
'use strict';

$(document).ready(function(){
  var data = [
      { year: '2010', unitsSold:-100, salesman : 'Bob' },
      { year: '2011', unitsSold:200, salesman : 'Bob' },
      { year: '2012', unitsSold:300, salesman : 'Bob' },
      { year: '2013', unitsSold:400, salesman : 'Bob' },
      { year: '2014', unitsSold:500, salesman : 'Bob' },
      { year: '2010', unitsSold:100, salesman : 'Gina' },
      { year: '2011', unitsSold:100, salesman : 'Gina' },
      { year: '2012', unitsSold:-100, salesman : 'Gina' },
      { year: '2013', unitsSold:500, salesman : 'Gina' },
      { year: '2014', unitsSold:600, salesman : 'Gina' },
      { year: '2010', unitsSold:400, salesman : 'Average' },
      { year: '2011', unitsSold:0, salesman : 'Average' },
      { year: '2012', unitsSold:400, salesman : 'Average' },
      { year: '2013', unitsSold:400, salesman : 'Average' },
      { year: '2014', unitsSold:400, salesman : 'Average' }
    ];

  var parsedData = d4.parsers.nestedGroup()
    .x('year')
    .y('unitsSold')
    .value('unitsSold')(data);

  var chart = d4.charts.groupedColumn()
  .width($('#items').width())
  .x(function(x){
    x.key('year');
  })
  .y(function(y){
    y.key('unitsSold');
  })
  .groupsOf(parsedData.data[0].values.length);

  var chart2 = d4.charts.groupedColumn()
  .width($('#series').width())
  .x(function(x){
    x.key('year');
  })
  .y(function(y){
    y.key('unitsSold');
  })
  .groupsOf(parsedData.data[0].values.length);

  d3.select('#items')
  .datum(parsedData.data)
  .call(chart);

  d3.select('#series')
  .datum(parsedData.data)
  .call(chart2);
});

</script>
<h6>Item Example</h6>
<div id="items"></div>

<h6>Series Example</h6>
<div id="series"></div>

<h6>JavaScript Code</h6>
<pre><code id="code" class="language-javascript"></code></pre>